<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Lithnet.Transforms.Presentation"
                    xmlns:t="clr-namespace:Lithnet.Transforms;assembly=Lithnet.Transforms"
                    xmlns:core="clr-namespace:Lithnet.Common.Presentation;assembly=Lithnet.Common.Presentation">

    <DataTemplate  DataType="{x:Type vm:SimpleLookupTransformViewModel}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Label Content="When no match is found"
                       Grid.Row="0"
                       Grid.Column="0" />
                <ComboBox ItemsSource="{Binding Source={core:EnumExtension {x:Type t:OnMissingMatch}}}"
                          SelectedValue="{Binding OnMissingMatch, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}"
                          SelectedValuePath="Value"
                          Grid.Row="0"
                          Grid.Column="1" />

                <Label Content="Default value"
                       Grid.Row="1"
                       Grid.Column="0" />
                <TextBox Text="{Binding DefaultValue, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}"
                         Grid.Row="1"
                         Grid.Column="1"
                         IsEnabled="{Binding DefaultValueIsEnabled}" />

                <Label Content="Return data type"
                       Grid.Row="2"
                       Grid.Column="0" />
                <ComboBox ItemsSource="{Binding Path=AllowedReturnTypes}"
                          SelectedValue="{Binding Path=UserDefinedReturnType, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}"
                          SelectedValuePath="Value"
                          Grid.Row="2"
                          Grid.Column="1" />

                <DataGrid AutoGenerateColumns="False"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          ItemsSource="{Binding LookupItems, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}"
                          Grid.Row="3"
                          Grid.Column="1"
                          CanUserAddRows="true"
                          CanUserDeleteRows="true"
                          MinHeight="100"
                          Margin="0,5,0,5">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Input value"
                                            Binding="{Binding Path=CurrentValue,ValidatesOnDataErrors=True,ValidatesOnExceptions=true}"
                                            Width="Auto">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping"
                                            Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextWrapping"
                                            Value="Wrap" />
                                    <Setter Property="AcceptsReturn"
                                            Value="true" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Output value"
                                            Binding="{Binding Path=NewValue,ValidatesOnDataErrors=True,ValidatesOnExceptions=true}"
                                            Width="Auto">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping"
                                            Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextWrapping"
                                            Value="Wrap" />
                                    <Setter Property="AcceptsReturn"
                                            Value="true" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>